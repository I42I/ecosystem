<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ecosystem.ViewModels"
        xmlns:helpers="using:ecosystem.Helpers"
        x:Class="ecosystem.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Title="Ecosystem"
        Width="800"
        Height="600"
        SizeChanged="Window_SizeChanged"
        Loaded="Window_Loaded">

    <Window.Styles>
        <Style Selector="Button.controlButton">
            <Setter Property="Background" Value="#2C2C2E"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Template">
                <ControlTemplate>
                    <Border Name="PART_Border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{TemplateBinding CornerRadius}"
                            BorderThickness="0">
                        <ContentPresenter Content="{TemplateBinding Content}"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter>
        </Style>

        <Style Selector="Button.controlButton:pointerover">
            <Setter Property="Background" Value="#3C3C3E"/>
            <Setter Property="RenderTransform" Value="scale(1.02)"/>
        </Style>

        <Style Selector="Button.controlButton:pressed">
            <Setter Property="Background" Value="#242426"/>
            <Setter Property="RenderTransform" Value="scale(0.98)"/>
        </Style>

        <Style Selector="Button.primaryButton">
            <Setter Property="Background" Value="#0A84FF"/>
        </Style>

        <Style Selector="Button.primaryButton:pointerover">
            <Setter Property="Background" Value="#2094FF"/>
        </Style>

        <Style Selector="Button.activeButton">
            <Setter Property="Background" Value="#0A84FF"/>
        </Style>

        <Style Selector="Button.activeButton:pointerover">
            <Setter Property="Background" Value="#2094FF"/>
        </Style>
    </Window.Styles>

    <DockPanel LastChildFill="True">
        <Border DockPanel.Dock="Bottom" 
                Height="50" 
                Background="#1A1A1A"
                BorderBrush="#333333"
                BorderThickness="0,1,0,0">
            <Grid Margin="24,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"/> <!-- Left - Time -->
                    <ColumnDefinition Width="*"/>    <!-- Center - Controls -->
                    <ColumnDefinition Width="120"/> <!-- Right - Seed -->
                </Grid.ColumnDefinitions>

                <!-- Left - Time -->
                <StackPanel Grid.Column="0" 
                        Orientation="Horizontal" 
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left">
                    <TextBlock Text="Time:" 
                            Foreground="#8E8E93"
                            FontSize="13"/>
                    <TextBlock Text="{Binding SimulationTime}"
                            Foreground="White"
                            FontWeight="SemiBold"
                            FontSize="14"
                            Margin="8,0,0,0"/>
                </StackPanel>

                <!-- Center - Controls -->
                <StackPanel Grid.Column="1" 
                        Orientation="Horizontal" 
                        HorizontalAlignment="Center"
                        Width="300"
                        Spacing="12">
                        
                    <!-- Play/Pause Button -->
                    <Button Command="{Binding ToggleSimulationCommand}"
                            Width="90"
                            Height="32"
                            CornerRadius="8"
                            Classes="controlButton">
                        <Button.Background>
                            <SolidColorBrush Color="{Binding IsRunning, 
                                            Converter={StaticResource BoolToColorConverter}, 
                                            ConverterParameter='#FFD700|#34C759'}"/>
                        </Button.Background>
                        <TextBlock Text="{Binding IsRunning, Converter={StaticResource BoolToValueConverter}}"
                                Foreground="White"/>
                    </Button>

                    <!-- Reset Button -->
                    <Button Command="{Binding ResetSimulationCommand}"
                            Width="90"
                            Height="32"
                            CornerRadius="8"
                            Background="Red"
                            Classes="controlButton">
                        <TextBlock Text="Reset"
                                Foreground="White"
                                FontWeight="SemiBold"
                                FontSize="14"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"/>
                    </Button>

                    <!-- Debug Button -->
                    <Button Command="{Binding ToggleDebugCommand}"
                            Width="90"
                            Height="32"
                            CornerRadius="8"
                            Classes="controlButton"
                            Classes.activeButton="{Binding IsDebugMode}">
                        <TextBlock Text="Debug"/>
                    </Button>
                </StackPanel>

                <!-- Right - Seed -->
                <StackPanel Grid.Column="2" 
                        Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Right">
                    <TextBlock Text="Seed:" 
                            Foreground="#8E8E93"
                            FontSize="13"/>
                    <TextBlock Text="{Binding SimulationSeed}"
                            Foreground="White"
                            FontWeight="SemiBold"
                            FontSize="14"
                            Margin="8,0,0,0"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Main simulation area -->
        <Canvas Name="WorldCanvas">
            <!-- Grille de fond -->
            <ItemsControl ItemsSource="{Binding GridCells}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding WindowWidth}" 
                                Height="{Binding WindowHeight}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.DataTemplates>
                    <DataTemplate DataType="{x:Type vm:GridCellViewModel}">
                        <Canvas>
                            <Rectangle 
                                Width="{Binding Width}"
                                Height="{Binding Height}"
                                Fill="{Binding Color}"
                                Canvas.Left="{Binding X}"
                                Canvas.Top="{Binding Y}"/>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.DataTemplates>
            </ItemsControl>

            <!-- Safe Movement Area Border -->
            <Border BorderBrush="Red" 
                    BorderThickness="2" 
                    Width="{Binding WindowWidth, Converter={StaticResource SafeAreaConverter}}"
                    Height="{Binding WindowHeight, Converter={StaticResource SafeAreaConverter}, ConverterParameter=height}"
                    Margin="{Binding WindowWidth, Converter={StaticResource SafeAreaMarginConverter}}"/>

            <!-- Entity Canvas -->
            <ItemsControl ItemsSource="{Binding EntityViewModels}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Name="MainCanvas" 
                                Width="{Binding WindowWidth}" 
                                Height="{Binding WindowHeight}"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Canvas>
                            <!-- Sprite Image -->
                            <Image Width="{Binding SpriteSize}"
                                Height="{Binding SpriteSize}"
                                Source="{Binding SpriteBitmap}"
                                IsVisible="{Binding HasSprite}"
                                Canvas.Left="{Binding SpriteCenteredX}"
                                Canvas.Top="{Binding SpriteCenteredY}">
                                <Image.IsVisible>
                                    <MultiBinding Converter="{x:Static BoolConverters.And}">
                                        <Binding Path="HasSprite"/>
                                        <Binding Path="!$parent[Window].((vm:MainWindowViewModel)DataContext).IsDebugMode"/>
                                    </MultiBinding>
                                </Image.IsVisible>
                                <Image.RenderTransform>
                                    <TransformGroup>
                                        <TranslateTransform Y="-10"/>
                                        <ScaleTransform ScaleX="{Binding MovementDirection}" ScaleY="1"/>
                                    </TransformGroup>
                                </Image.RenderTransform>
                            </Image>

                            <!-- Debug Elements -->
                            <Canvas IsVisible="{Binding $parent[Window].((vm:MainWindowViewModel)DataContext).IsDebugMode}">
                                <!-- Root Circle for Plants -->
                                <Ellipse Width="{Binding ScaledRootRadius}"
                                        Height="{Binding ScaledRootRadius}"
                                        Fill="{Binding Color}"
                                        Opacity="0.2"
                                        IsVisible="{Binding Entity, Converter={x:Static helpers:TypeConverters.IsPlant}}"
                                        Canvas.Left="{Binding CenteredRootX}"
                                        Canvas.Top="{Binding CenteredRootY}"/>

                                <!-- Vision Circle -->
                                <Ellipse Width="{Binding ScaledVisionRadius}"
                                        Height="{Binding ScaledVisionRadius}"
                                        Stroke="{Binding Color}"
                                        StrokeThickness="1"
                                        Fill="{Binding Color}"
                                        Opacity="0.2"
                                        Canvas.Left="{Binding CenteredX}"
                                        Canvas.Top="{Binding CenteredY}"/>

                                <!-- Contact Circle -->
                                <Ellipse Width="{Binding ScaledContactRadius}"
                                        Height="{Binding ScaledContactRadius}"
                                        Stroke="Red"
                                        StrokeThickness="1"
                                        Fill="{Binding Color}"
                                        Canvas.Left="{Binding CenteredContactX}"
                                        Canvas.Top="{Binding CenteredContactY}"/>

                                <!-- Entity Name and Stats -->
                                <TextBlock Text="{Binding Entity.DisplayName}"
                                        FontSize="10"
                                        Canvas.Left="{Binding DisplayX}"
                                        Canvas.Top="{Binding DisplayY}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-20" Y="-17"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                                                            
                                <TextBlock Text="{Binding StatsText}"
                                        FontSize="10"
                                        Foreground="Black"
                                        TextAlignment="Center"
                                        Canvas.Left="{Binding DisplayX}"
                                        Canvas.Top="{Binding DisplayY}">
                                    <TextBlock.RenderTransform>
                                        <TranslateTransform X="-30" Y="10"/>
                                    </TextBlock.RenderTransform>
                                </TextBlock>
                            </Canvas>
                        </Canvas>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Canvas>
    </DockPanel>
</Window>