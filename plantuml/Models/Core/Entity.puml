@startuml
abstract class Entity {
    - _color : IBrush?
    + GetDistanceTo(otherPosition:Position) : double
    - Position_PropertyChanged(sender:object?, e:PropertyChangedEventArgs) : void
    - _displayWidth : double = 800
    - _displayHeight : double = 450
    + DisplayX : double <<get>>
    + DisplayY : double <<get>>
    + UpdateDisplaySize(width:double, height:double) : void
    - <<readonly>> _id : int
    + DisplayName : string <<get>>
    + TypeId : int <<get>>
    + StatsText : string <<get>>
    # Entity(position:Position)
    + <<virtual>> Update() : void
    # <<virtual>> OnPropertyChanged(propertyName:string) : void
    +  <<event>> PropertyChanged : PropertyChangedEventHandler? 
}
class "Dictionary`2"<T1,T2> {
}
INotifyPropertyChanged <|-- Entity
Entity o-> "_position" Position
Entity --> "Position" Position
Entity --> "Color" IBrush
Entity o-> "_typeCounters<Type,int>" "Dictionary`2"
Entity --> "Stats" EntityStats
@enduml
