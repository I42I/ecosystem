@startuml
interface ITimeManager {
    CurrentTime : double <<get>>
    DeltaTime : double <<get>>
    RegisterTickAction(action:Action) : void
    Start() : void
    Pause() : void
    WaitForStop() : void
    Reset() : void
    SetSimulationSpeed(speed:double) : void
}
class TimeManager {
    - <<const>> FIXED_TIME_STEP : double
    - _isRunning : bool
    - _currentTime : double
    - _simulationSpeed : double = 1.0
    - _isResetting : bool
    + CurrentTime : double <<get>>
    + DeltaTime : double <<get>>
    +  <<event>> SimulationUpdated : EventHandler? 
    - _displayTime : double
    - <<const>> DISPLAY_TIME_MULTIPLIER : double = 10.0
    + TimeManager()
    - UpdateLogic() : void
    - Render() : void
    + RegisterTickAction(action:Action) : void
    + Start() : void
    + Pause() : void
    + WaitForStop() : void
    + DisplayTime : double <<get>>
    + Reset() : void
    + SetSimulationSpeed(speed:double) : void
}
class "List`1"<T> {
}
ITimeManager <|-- TimeManager
TimeManager o-> "_tickActions<Action>" "List`1"
TimeManager --> "_gameLoop" GameLoop
@enduml
